decl printInt(i:Int):Void
decl printFloat(f:Float):Void
decl printBool(b:Bool):Void
decl printString(s:String):Void
decl new_int_array(size:Int):[Int]
decl new_float_array(size:Int):[Float]
decl new_bool_array(size:Int):[Bool]
decl new_string_array(size:Int):[String]

def main(ar:[String]):Int {
	
	printString("--Array Int--");	
	arrInt:[Int] = retIntArr();
	printInt(arrInt[0]);
	printInt(arrInt[1]);
	printInt(arrInt[2]);
	printInt(arrInt[3]);
	printString("---");
	printInt(retIntArr()[0]);
	printInt(retIntArr()[1]);
	printInt(retIntArr()[2]);
	printInt(retIntArr()[3]);
	
	printString("--Array Float--");
	arrFloat:[Float] = retFloatArr();
	printFloat(arrFloat[0]);
	printFloat(arrFloat[1]);
	printFloat(arrFloat[2]);
	printFloat(arrFloat[3]);
	printString("---");
	printFloat(retFloatArr()[0]);
	printFloat(retFloatArr()[1]);
	printFloat(retFloatArr()[2]);
	printFloat(retFloatArr()[3]);
	
	printString("--Array Bool--");
	arrBool:[Bool] = retBoolArr();
	printBool(arrBool[0]);
	printBool(arrBool[1]);
	printBool(arrBool[2]);
	printBool(arrBool[3]);
	printString("---");
	printBool(retBoolArr()[0]);
	printBool(retBoolArr()[1]);
	printBool(retBoolArr()[2]);
	printBool(retBoolArr()[3]);
	
	printString("--Array String--");
	arrString:[String] = retStrArr();
	printString(arrString[0]);
	printString(arrString[1]);
	printString(arrString[2]);
	printString("---");
	printString(retStrArr()[0]);
	printString(retStrArr()[1]);
	printString(retStrArr()[2]);
	
	return 0;
}

def retIntArr():[Int] {
	arr:[Int] = new_int_array(4);
	arr[0] = 1;
	arr[1] = 2;
	arr[2] = 3;
	arr[3] = 4;
	return arr;
}

def retFloatArr():[Float] {
	arr:[Float] = new_float_array(4);
	arr[0] = 1.0;
	arr[1] = 2.0;
	arr[2] = 3.0;
	arr[3] = 4.0;
	return arr;
}

def retBoolArr():[Bool] {
	arr:[Bool] = new_bool_array(4);
	arr[0] = true;
	arr[1] = false;
	arr[2] = true;
	arr[3] = false;
	return arr;
}

def retStrArr():[String] {
	arr:[String] = new_string_array(3);
	arr[0] = "RUN,";
	arr[1] = "FORREST.";
	arr[2] = "RUN!";
	return arr;
}
